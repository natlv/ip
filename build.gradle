plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

repositories {
    mavenCentral()
}

def getOsClassifier() {
    def osName = System.getProperty("os.name").toLowerCase()
    if (osName.contains("win")) {
        return "win"
    } else if (osName.contains("mac")) {
        return "mac"
    } else if (osName.contains("nux") || osName.contains("nix")) {
        return "linux"
    } else {
        throw new GradleException("Unsupported OS: " + osName)
    }
}

dependencies {
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.0'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.10.0'

    String javaFxVersion = '17.0.7'
    String osClassifier = getOsClassifier()

    implementation "org.openjfx:javafx-base:$javaFxVersion:$osClassifier"
    implementation "org.openjfx:javafx-controls:$javaFxVersion:$osClassifier"
    implementation "org.openjfx:javafx-fxml:$javaFxVersion:$osClassifier"
    implementation "org.openjfx:javafx-graphics:$javaFxVersion:$osClassifier"
}

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"

        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true
        showStandardStreams = false
    }
}

application {
    mainClass.set('Launcher')
}

shadowJar {
    archiveBaseName = 'natsbot'
    archiveClassifier = null
}

run {
    standardInput = System.in
}
